@model UsersManager.Models.Photo
@{
    bool creating = Model.Id == 0;
}

@if (creating)
{
    <h2>Ajout d'une photo</h2>
}
else
{
    <h2>Modification d'une photo</h2>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

<div class="form-horizontal">
    <h4>Photo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, 10, 150, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VisibilityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Helper.ListToRadioButtonGroup("VisibilityId", (SelectList)ViewBag.Visibilities, Model.VisibilityId)
            @Html.ValidationMessageFor(model => model.VisibilityId, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (!creating)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Helper.DateTimeControl(Model.CreationDate, "CreationDate")
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.CreationDate)
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
